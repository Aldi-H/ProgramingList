<resources>
    <string name="app_name">ProgramingList</string>
    <string name="programing_name">Programing Name</string>

    <!--Java Detail-->
    <string name="detail">Programing detail</string>

    <string name="java">Java</string>

    <string name="java_definition">Definition of Java</string>

    <string name="java_definition_detail">Java is a general-purpose programming language that is class-based,
        object-oriented, and designed to have as few implementation dependencies as possible.
        It is intended to let application developers write once, run anywhere (WORA),
        meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.
        Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture.
        The syntax of Java is similar to C and C++, but it has fewer low-level facilities than either of them. As of 2019,
        Java was one of the most popular programming languages in use according to GitHub,
        particularly for client-server web applications, with a reported 9 million developers.

    \n\nJava was originally developed by James Gosling at Sun Microsystems
        (which has since been acquired by Oracle) and released in 1995 as a core component of Sun Microsystems\' Java platform.
        The original and reference implementation Java compilers, virtual machines,
        and class libraries were originally released by Sun under proprietary licenses.
        As of May 2007, in compliance with the specifications of the Java Community Process,
        Sun had relicensed most of its Java technologies under the GNU General Public License.
        Meanwhile, others have developed alternative implementations of these Sun technologies,
        such as the GNU Compiler for Java (bytecode compiler), GNU Classpath (standard libraries), and IcedTea-Web (browser plugin for applets).

    \n\nThe latest versions are Java 14, released in March 2020, and Java 11,
        a currently supported long-term support (LTS) version, released on September 25, 2018;
        Oracle released for the legacy Java 8 LTS the last free public update in January 2019 for commercial use,
        while it will otherwise still support Java 8 with public updates for personal use up to at least December 2020.
        Oracle (and others) highly recommend uninstalling older versions of Java because of serious risks due to unresolved security issues.
        Since Java 9, 10, 12 and 13 are no longer supported,
        Oracle advises its users to immediately transition to the latest version (currently Java 14) or an LTS release.</string>

    <!--Dart Detail-->
    <string name="dart_title">DART</string>

    <string name="dart_subtitle">Definition of Dart</string>

    <string name="dart_definition_detail">Dart is a client-optimized programming language for apps on multiple platforms.
        It is developed by Google and is used to build mobile, desktop, server, and web applications.
        Dart is an object-oriented, class-based, garbage-collected language with C-style syntax.
        Dart can compile to either native code or JavaScript. It supports interfaces, mixins, abstract classes, reified generics, and type inference.</string>

    <string name="dart_history_subtitle">History</string>

    <string name="dart_history_detail">Dart was unveiled at the GOTO conference in Aarhus, Denmark, October 10–12, 2011.
        The project was founded by Lars Bak and Kasper Lund. Dart 1.0 was released on November 14th, 2013.

    \n\nDart initially had a mixed reception and the Dart initiative has been criticized by some for fragmenting the web,
        due to the original plans to include a Dart VM in Chrome.
        Those plans were dropped in 2015 with the 1.9 release of Dart to focus instead on compiling Dart to JavaScript.
        In August 2018, Dart 2.0 was released, with language changes including a sound type system.

    \n\nRecently released Dart 2.6 is accompanied with a new extension dart2native.
        The feature extends native compilation to the Linux, macOS, and Windows desktop platforms.
        Earlier developers were able to create new tools only using Android or iOS devices.
        Moreover, with this extension it becomes possible to compose a Dart program into self-contained executables.
        Thus, according to the company representatives, it’s not obligatory now to have Dart SDK installed,
        the self-contained executables can now start running in a few seconds.
        The new extension is also integrated with Flutter toolkit, thus making it possible to use the compiler on small services (backend supporting for example).</string>

    <!--CPP-->
    <string name="cpp_title">C++</string>

    <string name="cpp_subtitle">Definition of C++</string>

    <string name="cpp_subtitle_definition">C++ (/ˌsiːˌplʌsˈplʌs/) is a general-purpose programming language created by Bjarne Stroustrup
        as an extension of the C programming language, or \'C with Classes\'.
        The language has expanded significantly over time, and modern C++ now has object-oriented, generic,
        and functional features in addition to facilities for low-level memory manipulation.
        It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation,
        LLVM, Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.

    \n\nC++ was designed with a bias toward system programming and embedded, resource-constrained software and large systems, with performance,
        efficiency, and flexibility of use as its design highlights. C++ has also been found useful in many other contexts,
        with key strengths being software infrastructure and resource-constrained applications, including desktop applications, video games,
        servers (e.g. e-commerce, Web search, or SQL servers), and performance-critical applications (e.g. telephone switches or space probes).

    \n\nC++ is standardized by the International Organization for Standardization (ISO),
        with the latest standard version ratified and published by ISO in December 2017 as ISO/IEC 14882:2017 (informally known as C++17).
        The C++ programming language was initially standardized in 1998 as ISO/IEC 14882:1998, which was then amended by the C++03,
        C++11 and C++14 standards. The current C++17 standard supersedes these with new features and an enlarged standard library.
        Before the initial standardization in 1998, C++ was developed by Danish computer scientist Bjarne Stroustrup
        at Bell Labs since 1979 as an extension of the C language; he wanted an efficient and flexible language
        similar to C that also provided high-level features for program organization. C++20 is the next planned standard,
        keeping with the current trend of a new version every three years.</string>

    <!--CSharp-->
    <string name="cs_title">C#</string>

    <string name="cs_subtitle">Definition of C#</string>

    <string name="cs_subtitle_detail">C# (pronounced see sharp, like the musical note C♯, but written with the number sign) is a general-purpose,
        multi-paradigm programming language encompassing strong typing, lexically scoped, imperative, declarative, functional, generic,
        object-oriented (class-based), and component-oriented programming disciplines. It was developed around 2000 by Microsoft as part of its
        .NET initiative and later approved as an international standard by Ecma (ECMA-334) in 2002 and ISO (ISO/IEC 23270) in 2003.
        Mono is the name of the free and open-source project to develop a compiler and runtime for the language.
        C# is one of the programming languages designed for the Common Language Infrastructure (CLI).</string>

    <string name="cs_history">History</string>

    <string name="cs_history_detail">During the development of the .NET Framework, the class libraries were originally written using a managed code compiler system called
        \'Simple Managed C (SMC)\'. In January 1999, Anders Hejlsberg formed a team to build a new language at the time called Cool, which stood for
        \'C-like Object Oriented Language\'. Microsoft had considered keeping the name \'Cool\' as the final name of the language,
        but chose not to do so for trademark reasons. By the time the .NET project was publicly announced at the July 2000 Professional Developers Conference,
        the language had been renamed C#, and the class libraries and ASP.NET runtime had been ported to C#.

    \n\nHejlsberg is C# principal designer and lead architect at Microsoft, and was previously involved with the design of Turbo Pascal,
        Embarcadero Delphi (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi), and Visual J++.
        In interviews and technical papers he has stated that flaws in most major programming languages (e.g. C++, Java, Delphi, and Smalltalk)
        drove the fundamentals of the Common Language Runtime (CLR), which, in turn, drove the design of the C# language itself.

    \n\nJames Gosling, who created the Java programming language in 1994, and Bill Joy, a co-founder of Sun Microsystems, the originator of Java,
        called C# an \'imitation\' of Java; Gosling further said that [C# is] sort of Java with reliability, productivity and security deleted.\'
        Klaus Kreft and Angelika Langer (authors of a C++ streams book) stated in a blog post that Java and C# are almost identical programming languages.
        Boring repetition that lacks innovation,\' \'Hardly anybody will claim that Java or C# are revolutionary programming languages
        that changed the way we write programs,\' and \'C# borrowed a lot from Java - and vice versa. Now that C# supports boxing and unboxing,
        we`ll have a very similar feature in Java.\' In July 2000, Hejlsberg said that C# is \'not a Java clone\' and is \'much closer to C++\' in its design.

    \n\nSince the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories,
        becoming two quite different languages. One of the first major departures came with the addition of generics to both languages,
        with vastly different implementations. C# makes use of reification to provide \'first-class\' generic objects that can be used like any other class,
        with code generation performed at class-load time. Furthermore, C# has added several major features to accommodate functional-style programming,
        culminating in the LINQ extensions released with C# 3.0 and its supporting framework of lambda expressions, extension methods, and anonymous types.
        These features enable C# programmers to use functional programming techniques, such as closures, when it is advantageous to their application.
        The LINQ extensions and the functional imports help developers reduce the amount of boilerplate code that is included in common tasks like querying a database,
        parsing an xml file, or searching through a data structure, shifting the emphasis onto the actual program logic to help improve readability and maintainability.

        \n\nC# used to have a mascot called Andy (named after Anders Hejlsberg). It was retired on January 29, 2004.

        \n\nC# was originally submitted to the ISO subcommittee JTC 1/SC 22 for review,[ under ISO/IEC 23270:2003,
        was withdrawn and was then approved under ISO/IEC 23270:2006.</string>

    <!--C-->
    <string name="c_title">C</string>

    <string name="c_subtitle">Definition of C</string>

    <string name="c_subtitle_detail">C (/siː/, as in the letter c) is a general-purpose, procedural computer programming language supporting structured programming,
        lexical variable scope, and recursion, with a static type system. By design, C provides constructs that map efficiently to typical machine instructions.
        It has found lasting use in applications previously coded in assembly language.
        Such applications include operating systems and various application software for computers architectures that range from supercomputers to PLCs and embedded systems.

    \n\nA successor to the programming language B, C was originally developed at Bell Labs by Dennis Ritchie between 1972 and 1973 to construct utilities running on Unix.
        It was applied to re-implementing the kernel of the Unix operating system. During the 1980s, C gradually gained popularity.
        It has become one of the most widely used programming languages,
        with C compilers from various vendors available for the majority of existing computer architectures and operating systems.
        C has been standardized by the ANSI since 1989 (ANSI C) and by the International Organization for Standardization (ISO).

    \n\nC is an imperative procedural language. It was designed to be compiled to provide low-level access to memory and language constructs
        that map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities,
        the language was designed to encourage cross-platform programming.
        A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms
        and operating systems with few changes to its source code.</string>

    <!--PYTHON-->
    <string name="python_title">PYTHON</string>

    <string name="python_subtitle">Definition of Python</string>

    <string name="python_subtitle_detail">Python is an interpreted, high-level, general-purpose programming language.
        Created by Guido van Rossum and first released in 1991, Python\'s design philosophy emphasizes code readability with its notable use of significant whitespace.
        Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.

    \n\nPython is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural),
        object-oriented, and functional programming. Python is often described as a "batteries included" language due to its comprehensive standard library.

    \n\nPython was conceived in the late 1980s as a successor to the ABC language. Python 2.0, released in 2000,
        introduced features like list comprehensions and a garbage collection system with reference counting.

    \n\nPython 3.0, released in 2008, was a major revision of the language that is not completely backward-compatible,
        and much Python 2 code does not run unmodified on Python 3.

    \n\nThe Python 2 language was officially discontinued in 2020 (first planned for 2015), and \'Python 2.7.18 is the last Python 2.7 release
        and therefore the last Python 2 release.\' No more security patches or other improvements will be released for it. With Python 2\'s end-of-life,
        only Python 3.5.x and later are supported.

    \n\nPython interpreters are available for many operating systems. A global community of programmers develops and maintains CPython,
        an open source reference implementation. A non-profit organization, the Python Software Foundation,
        manages and directs resources for Python and CPython development</string>

    <!--JAVASCRIPT-->
    <string name="javascript_title">JAVA SCRIPT</string>

    <string name="javascript_subtitle">Definition of JavaScript</string>

    <string name="javascript_subtitle_detail">JavaScript (/ˈdʒɑːvəˌskrɪpt/), often abbreviated as JS, is a programming language that conforms to the ECMAScript specification.
        JavaScript is high-level, often just-in-time compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation,
        and first-class functions.

    \n\nAlongside HTML and CSS, JavaScript is one of the core technologies of the World Wide Web.
        JavaScript enables interactive web pages and is an essential part of web applications. The vast majority of websites use it for client-side page behavior,
        and all major web browsers have a dedicated JavaScript engine to execute it.

    \n\nAs a multi-paradigm language, JavaScript supports event-driven, functional, and imperative programming styles.
        It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures,
        and the Document Object Model (DOM). However, the language itself does not include any input/output (I/O), such as networking, storage, or graphics facilities,
        as the host environment (usually a web browser) provides those APIs.

    \n\nJavaScript engines were originally used only in web browsers, but they are now embedded in some servers, usually via Node.js.
        They are also embedded in a variety of applications created with frameworks such as Electron and Cordova.

    \n\nAlthough there are similarities between JavaScript and Java, including language name, syntax, and respective standard libraries,
        the two languages are distinct and differ greatly in design.</string>

    <!--HTML-->
    <string name="html_title">HTML</string>

    <string name="html_subtitle">Definition of HTML</string>

    <string name="html_subtitle_detail">Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser.
        It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.

    \n\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages.
        HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.

    \n\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page.
        HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items.
        HTML elements are delineated by tags, written using angle brackets. Tags such as \'img\' and \'input\' directly introduce content into the page.
        Other tags such as \'p\' surround and provide information about document text and may include other tags as sub-elements.
        Browsers do not display the HTML tags, but use them to interpret the content of the page.

    \n\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages.
        Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C),
        former maintainer of the HTML and current maintainer of the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.</string>

    <!--RUBY-->
    <string name="ruby_title">RUBY</string>

    <string name="ruby_subtitle">Definition of Ruby</string>

    <string name="ruby_subtitle_detail">Ruby is an interpreted, high-level, general-purpose programming language.
        It was designed and developed in the mid-1990s by Yukihiro \'Matz\' Matsumoto in Japan.

    \n\nRuby is dynamically typed and uses garbage collection. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming.
        According to the creator, Ruby was influenced by Perl, Smalltalk, Eiffel, Ada, Basic, and Lisp.</string>

    <string name="ruby_history">History</string>

    <string name="ruby_history_detail">Early concept

    \n\nMatsumoto has said that Ruby was conceived in 1993. In a 1999 post to the ruby-talk mailing list, he describes some of his early ideas about the language:
    \n\'I was talking with my colleague about the possibility of an object-oriented scripting language. I knew Perl (Perl4, not Perl5), but I didn\'t like it really,
        because it had the smell of a toy language (it still has). The object-oriented language seemed very promising. I knew Python then. But I didn\'t like it,
        because I didn\'t think it was a true object-oriented language – OO features appeared to be add-on to the language. As a language maniac and OO fan for 15 years,
        I really wanted a genuine object-oriented, easy-to-use scripting language. I looked for but couldn\'t find one. So I decided to make it\'.

    \n\nMatsumoto describes the design of Ruby as being like a simple Lisp language at its core, with an object system like that of Smalltalk,
        blocks inspired by higher-order functions, and practical utility like that of Perl.

    \n\nThe name \'Ruby\'

    \n\nThe name "Ruby" originated during an online chat session between Matsumoto and Keiju Ishitsuka on February 24, 1993,
        before any code had been written for the language. Initially two names were proposed: \'Coral\' and \'Ruby\'.
        Matsumoto chose the latter in a later e-mail to Ishitsuka. Matsumoto later noted a factor in choosing the name \'Ruby\' – it was the birthstone of one of his colleagues.
    </string>

    <!--PHP-->
    <string name="php_title">PHP</string>

    <string name="php_subtitle">Definition of PHP</string>

    <string name="php_subtitle_detail">PHP is a popular general-purpose scripting language that is especially suited to web development.
        It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994; the PHP reference implementation is now produced by The PHP Group.
        PHP originally stood for Personal Home Page, but it now stands for the recursive initialism PHP: Hypertext Preprocessor.

    \n\nPHP code is usually processed on a web server by a PHP interpreter implemented as a module, a daemon or as a Common Gateway Interface (CGI) executable.
        On a web server, the result of the interpreted and executed PHP code – which may be any type of data, such as generated HTML or
        binary image data – would form the whole or part of a HTTP response. Various web template systems, web content management systems,
        and web frameworks exist which can be employed to orchestrate or facilitate the generation of that response.
        Additionally, PHP can be used for many programming tasks outside of the web context, such as standalone graphical applications and robotic drone control.
        Arbitrary PHP code can also be interpreted and executed via command-line interface (CLI).

    \n\nThe standard PHP interpreter, powered by the Zend Engine, is free software released under the PHP License.
        PHP has been widely ported and can be deployed on most web servers on almost every operating system and platform, free of charge.

    \n\nThe PHP language evolved without a written formal specification or standard until 2014, with the original implementation acting as the de facto
        standard which other implementations aimed to follow. Since 2014, work has gone on to create a formal PHP specification.

    \n\nAs of April 2020, over half of sites on the web using PHP are still on discontinued/\'EOLed\' version 5.6 or older; and with version 7.0 and 7.1 over 68%,
        that are neither officially supported by The PHP Development Team, while security support is provided by third parties, such as Debian (up to June 2020 for PHP 5).
        Because of the popularity of PHP that means at least 53% of the websites in the world run on implementations of languages no longer supported by their designers.
        In addition, PHP version 7.2, the most popular supported PHP version, will stop getting security updates on November 30, 2020.</string>

    <!--Menu Item-->
    <string name="profile_menu">Profile</string>

    <!--Profile page-->
    <string name="nama">Nama</string>

    <string name="nama_detail">Aldi Himawan</string>
    <string name="email">Email</string>
    <string name="email_detail">aldihimawan88@gmail.com</string>

</resources>